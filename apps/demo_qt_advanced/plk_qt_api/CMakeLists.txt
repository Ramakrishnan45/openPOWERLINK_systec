PROJECT (PlkQtApi CXX) 

CMAKE_MINIMUM_REQUIRED (VERSION 2.8.11)

SET(PLK_LIB_NAME "PlkQtApi")
MESSAGE(STATUS "Configuring ${LIB_NAME}")

OPTION(CFG_COMPILE_LIB_MN           "Compile openPOWERLINK QT library" ON)
OPTION(CFG_WINDOWS_DLL              "Build openPOWERLINK Qt library as DLL" OFF)

IF(CFG_WINDOWS_DLL)
    SET(LIBRARY_TYPE SHARED)
ELSE()
    SET(LIBRARY_TYPE STATIC)
ENDIF()

IF (WIN32)
	# TODO
ELSE(WIN32)
	SET(CMAKE_BUILD_TYPE Release)
ENDIF (WIN32)

# Find includes in corresponding build directories
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
# Instruct CMake to run moc automatically when needed.
SET(CMAKE_AUTOMOC ON)

FILE ( GLOB_RECURSE LIB_SOURCES "${DEMO_PLK_QT_LIB_SOURCE_DIR}/*.cpp" )
FILE ( GLOB_RECURSE LIB_HEADERS "${DEMO_PLK_QT_LIB_INCLUDE_DIR}/*.h" )

INCLUDE_DIRECTORIES(${DEMO_PLK_QT_LIB_INCLUDE_DIR})

ADD_DEFINITIONS (${QT_DEFINITIONS}
				-DCONFIG_MN
				-DQT_XML_LIB
				-DQT_CORE_LIB
				-DUNICODE
				-DPLKQTAPI_LIB)

find_package(Qt5Core REQUIRED)
get_target_property(QtCore_location Qt5::Core LOCATION)
INCLUDE_DIRECTORIES(${QtCore_location})
message(STATUS "${QtCore_location}")

find_package(Qt5Xml REQUIRED)
get_target_property(QtXml_location Qt5::Xml LOCATION)
INCLUDE_DIRECTORIES(${QtXml_location})
message(STATUS "${QtXml_location}")

IF(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    IF(CMAKE_CL_64)
        LINK_DIRECTORIES(${CONTRIB_SOURCE_DIR}/pcap/windows/WpdPack/Lib/x64)
    ELSE ()
        LINK_DIRECTORIES(${CONTRIB_SOURCE_DIR}/pcap/windows/WpdPack/Lib)
    ENDIF()

    SET(LINK_LIBRARIES wpcap iphlpapi)
ENDIF()

ADD_LIBRARY(${PLK_LIB_NAME} ${LIBRARY_TYPE} ${LIB_SOURCES} ${LIB_HEADERS})

IF(UNIX)
SET_TARGET_PROPERTIES(${PLK_LIB_NAME} PROPERTIES PREFIX "")
ENDIF()

TARGET_LINK_LIBRARIES(${PLK_LIB_NAME} optimized ${OPLKLIB} debug ${OPLKLIB_DEBUG})
TARGET_LINK_LIBRARIES(${PLK_LIB_NAME} Qt5::Core Qt5::Xml ${ADD_ADDITIONAL_DEPENDENCIES} ${LINK_LIBRARIES})

STRING(TOUPPER "${CMAKE_BUILD_TYPE}" LIB_BUILD_TYPE)
IF("${LIB_BUILD_TYPE}" STREQUAL "DEBUG")
    SET(LIB_BUILD_TYPE_EXT "_d")
ELSE()
    SET(LIB_BUILD_TYPE_EXT "")
ENDIF()

### TODO update
#IF(WIN32)
#FILE ( GLOB_RECURSE LIBS "${CMAKE_SOURCE_DIR}/resources/lib/*.dll" )
#INSTALL(
#FILES ${LIBS} DESTINATION ${CMAKE_SOURCE_DIR}/bin/
#)
#ENDIF()

SET(OPLK_QT_API_DOC_DIR ${OPLK_ROOT_DIR}/doc/examples/demo_qt_advanced)
FIND_PACKAGE(Doxygen)
IF(DOXYGEN_FOUND)
CONFIGURE_FILE(${OPLK_QT_API_DOC_DIR}/doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
ADD_CUSTOM_TARGET(DOCUMENTATION ALL
${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
WORKING_DIRECTORY ${OPLK_QT_API_DOC_DIR}
COMMENT "Generating API documentation with Doxygen" VERBATIM
)
ENDIF(DOXYGEN_FOUND)

INSTALL(
TARGETS ${PLK_LIB_NAME} 
RUNTIME DESTINATION ${CMAKE_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}
ARCHIVE DESTINATION ${CMAKE_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}
)