PROJECT (PlkQtApi CXX) 

CMAKE_MINIMUM_REQUIRED (VERSION 2.8.11)

FILE ( GLOB_RECURSE LIB_SOURCES "${DEMO_PLK_QT_LIB_SOURCE_DIR}/*.cpp" )
FILE ( GLOB_RECURSE LIB_HEADERS "${DEMO_PLK_QT_LIB_INCLUDE_DIR}/*.h" )

INCLUDE_DIRECTORIES(${DEMO_PLK_QT_LIB_INCLUDE_DIR})
include_directories("${CMAKE_PREFIX_PATH}/include")

ADD_DEFINITIONS (${QT_DEFINITIONS}
				-DCONFIG_MN
				-DQT_XML_LIB
				-DQT_CORE_LIB
				-DUNICODE
				-DPLKQTAPI_LIB)

# Find includes in corresponding build directories
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
# Instruct CMake to run moc automatically when needed.
SET(CMAKE_AUTOMOC ON)

#FIND_PACKAGE(Qt5Core)
#FIND_PACKAGE(Qt5Xml REQUIRED)
find_package(Qt5Core REQUIRED)
get_target_property(QtCore_location Qt5::Core LOCATION)
INCLUDE_DIRECTORIES(${QtCore_location})
message(STATUS "${QtCore_location}")

find_package(Qt5Xml REQUIRED)
get_target_property(QtXml_location Qt5::Xml LOCATION)
INCLUDE_DIRECTORIES(${QtXml_location})
message(STATUS "${QtXml_location}")

SET(CMAKE_BUILD_TYPE Release)
SET(LIBRARY_TYPE SHARED)

ADD_LIBRARY(PlkQtApi ${LIBRARY_TYPE} ${LIB_SOURCES} ${LIB_HEADERS})
IF(UNIX)
SET_TARGET_PROPERTIES(PlkQtApi PROPERTIES PREFIX "")
ENDIF()

TARGET_LINK_LIBRARIES(PlkQtApi ${ADD_ADDITIONAL_DEPENDENCIES})

STRING(TOUPPER "${CMAKE_BUILD_TYPE}" LIB_BUILD_TYPE)
IF("${LIB_BUILD_TYPE}" STREQUAL "DEBUG")
    SET(LIB_BUILD_TYPE_EXT "_d")
ELSE()
    SET(LIB_BUILD_TYPE_EXT "")
ENDIF()

### TODO update
IF(WIN32)
FILE ( GLOB_RECURSE LIBS "${CMAKE_SOURCE_DIR}/resources/lib/*.dll" )
INSTALL(
FILES ${LIBS} DESTINATION ${CMAKE_SOURCE_DIR}/bin/
)
ENDIF()

INSTALL(
TARGETS PlkQtApi 
RUNTIME DESTINATION ${CMAKE_SOURCE_DIR}/bin
LIBRARY DESTINATION ${CMAKE_SOURCE_DIR}/bin
)