SET(PLK_QT_EXE_NAME "plk_qt_gui")
PROJECT (${PLK_QT_EXE_NAME} CXX) 

CMAKE_MINIMUM_REQUIRED (VERSION 2.8.11)

SET(CMAKE_MODULE_PATH {CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR})
INCLUDE(findPlkQtApi)

SET(DEMO_PLK_QT_GUI_DIR ${CMAKE_SOURCE_DIR}/plk_qt_gui)
SET(DEMO_PLK_QT_GUI_INCLUDE_DIR ${DEMO_PLK_QT_GUI_DIR}/include)
SET(DEMO_PLK_QT_GUI_SOURCE_DIR ${DEMO_PLK_QT_GUI_DIR}/src)
SET(DEMO_PLK_QT_GUI_UI_DIR ${DEMO_PLK_QT_GUI_DIR}/ui)
SET(DEMO_PLK_QT_GUI_RESOURCE_DIR ${DEMO_PLK_QT_GUI_UI_DIR}/resources)

INCLUDE_DIRECTORIES(${DEMO_PLK_QT_GUI_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${DEMO_PLK_QT_LIB_INCLUDE_DIR})

FILE ( GLOB_RECURSE GUI_SOURCES "${DEMO_PLK_QT_GUI_SOURCE_DIR}/*.cpp" )
FILE ( GLOB_RECURSE GUI_HEADERS "${DEMO_PLK_QT_GUI_INCLUDE_DIR}/*.h" )
FILE ( GLOB_RECURSE GUI_UI_FILES "${DEMO_PLK_QT_GUI_UI_DIR}/*.ui" )
FILE ( GLOB_RECURSE GUI_RESOURCE_FILES "${DEMO_PLK_QT_GUI_RESOURCE_DIR}/*.qrc" )

find_package(Qt5Core REQUIRED)
find_package(Qt5Widgets REQUIRED)
find_package(Qt5Gui REQUIRED)
FIND_OPLK_QT_API_LIBRARY(PlkQtApi)
#add_definitions(${Qt5Widgets_DEFINITIONS})

# Find includes in corresponding build directories
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
# Instruct CMake to run moc automatically when needed.
SET(CMAKE_AUTOMOC ON)
INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_BINARY_DIR} )

#TODO Add in install
SET(CFG_DEMO_PROJECT "Demo_3CN" CACHE STRING
        "Valid projects are Demo_3CN, Demo_3CN_BC0083")
SET_PROPERTY(CACHE CFG_DEMO_PROJECT PROPERTY STRINGS Demo_3CN Demo_3CN_BC0083)

qt5_wrap_ui(GUI_UI_HEADERS ${GUI_UI_FILES})
source_group("Generated UI Headers" FILES ${GUI_UI_HEADERS})
qt5_add_resources(GUI_RESOURCES ${GUI_RESOURCE_FILES})
set(RESOURCE_ADDED ${GUI_RESOURCES})

add_executable (${PLK_QT_EXE_NAME} ${GUI_UI_HEADERS} ${GUI_SOURCES} ${GUI_HEADERS} ${GUI_RESOURCES})
qt5_use_modules(${PLK_QT_EXE_NAME} Core Gui Widgets)

IF(UNIX)
SET_TARGET_PROPERTIES(${PLK_QT_EXE_NAME} PROPERTIES PREFIX "")
ENDIF()

add_dependencies(${PLK_QT_EXE_NAME} demo_mn_qt_advanced)

TARGET_LINK_LIBRARIES(${PLK_QT_EXE_NAME} optimized ${OPLKLIB} debug ${OPLKLIB_DEBUG})
TARGET_LINK_LIBRARIES(${PLK_QT_EXE_NAME} optimized ${OPLK_QT_API_LIB} debug ${OPLK_QT_API_LIB_DEBUG})
TARGET_LINK_LIBRARIES(${PLK_QT_EXE_NAME} ${ADD_ADDITIONAL_DEPENDENCIES} ${PCAP_LIBRARIES})


#install(
#    TARGETS ${PLK_QT_EXE_NAME}
#    CONFIGURATIONS  Debug
#    DESTINATION ${PLK_QT_BINARY_DIR}/Debug
#)
#
#install(
#    TARGETS ${PLK_QT_EXE_NAME}
#    CONFIGURATIONS  Release
#    DESTINATION ${PLK_QT_BINARY_DIR}/Release
#)

INSTALL(
TARGETS ${PLK_QT_EXE_NAME} 
RUNTIME DESTINATION ${PLK_QT_BINARY_DIR}/
ARCHIVE DESTINATION ${PLK_QT_BINARY_DIR}/
)